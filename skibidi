local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer

-- GUI Loading
local loadingGui = Instance.new("ScreenGui")
loadingGui.Name = "LoadingScreen"
loadingGui.IgnoreGuiInset = true
loadingGui.Parent = player:WaitForChild("PlayerGui")

local bg = Instance.new("Frame")
bg.Size = UDim2.new(1, 0, 1, 0)
bg.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
bg.Parent = loadingGui

local title = Instance.new("TextLabel")
title.AnchorPoint = Vector2.new(0.5, 0.5)
title.Position = UDim2.new(0.5, 0, 0.45, 0)
title.Size = UDim2.new(0, 400, 0, 50)
title.BackgroundTransparency = 1
title.Text = "üîÑ ƒêang t·∫£i ITatzuki Hub..."
title.TextSize = 28
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.Parent = bg

-- Progress bar container
local progressBg = Instance.new("Frame")
progressBg.AnchorPoint = Vector2.new(0.5, 0)
progressBg.Position = UDim2.new(0.5, 0, 0.55, 0)
progressBg.Size = UDim2.new(0, 400, 0, 20)
progressBg.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
progressBg.BorderSizePixel = 0
progressBg.Parent = bg

-- Progress bar fill
local progressFill = Instance.new("Frame")
progressFill.Size = UDim2.new(0, 0, 1, 0)
progressFill.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
progressFill.BorderSizePixel = 0
progressFill.Parent = progressBg

-- Tween animation function
local function updateProgress(percent)
    TweenService:Create(
        progressFill,
        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {Size = UDim2.new(percent, 0, 1, 0)}
    ):Play()
end

-- Gi·∫£ l·∫≠p t·∫£i t·ª´ng b∆∞·ªõc
for i = 1, 100 do
    updateProgress(i/100)
    wait(0.02) -- T·ªëc ƒë·ªô ch·∫°y (0.02s m·ªói b∆∞·ªõc)
end

-- T·∫£i Fluent sau khi ch·∫°y progress bar
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- Animation ·∫©n GUI
TweenService:Create(
    bg,
    TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
    {BackgroundTransparency = 1}
):Play()
TweenService:Create(
    title,
    TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
    {TextTransparency = 1}
):Play()
TweenService:Create(
    progressBg,
    TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
    {BackgroundTransparency = 1}
):Play()

wait(0.5)
loadingGui:Destroy()

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "ITatzuki Hub (Free) " .. Fluent.Version,
    SubTitle = "by ITatzuki",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

--Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "üóø" }),
    Farm = Window:AddTab({ Title = "Farm", Icon = "üí∏" }),
    Shop = Window:AddTab({ Title = "Shop", Icon = "üõí" }),
    Teleport = Window:AddTab({ Title = "Teleport", Icon = "‚úàÔ∏è" }),
    Support = Window:AddTab({ Title = "H·ªó Tr·ª£", Icon = "üòÖ"})
}

local Options = Fluent.Options

do
    Fluent:Notify({
        Title = "Th√¥ng B√°o",
        Content = "Ch√†o M·ª´ng ƒê√£ ƒê·∫øn V·ªõi ITatzuki Hubüóø",
        SubContent = "Script Bao H√∫p ü§ë", -- Optional
        Duration = 3 -- Set to nil to make the notification not disappear
    })



    Tabs.Main:AddParagraph({
        Title = "Script Thi·∫øu Kinh Ph√≠",
        Content = "Kh√¥ng c√≥ nh√† t√†i tr·ª£ üòî"
    })


end

local Button = Tabs.Main:AddButton({
    Title = "infinite yield",
    Description = "Nh·∫•n ƒë·ªÉ m·ªü script",
    Callback = function()
        -- Script c·ªßa b·∫°n ƒë·∫∑t trong ƒë√¢y
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()

        -- V√≠ d·ª•: Teleport t·ªõi m·ªôt part
        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local char = player.Character or player.CharacterAdded:Wait()
        local hrp = char:WaitForChild("HumanoidRootPart")

        local targetPart = workspace:FindFirstChild("TargetPart")
        if targetPart then
            hrp.CFrame = targetPart.CFrame + Vector3.new(0, 5, 0)
        else
            warn("Kh√¥ng t√¨m th·∫•y part!")
        end
    end
})

local Button = Tabs.Main:AddButton({
    Title = "Fling",
    Description = "ko ƒëc m·ªü 2 l·∫ßn",
    Callback = function()
        -- Script c·ªßa b·∫°n ƒë·∫∑t trong ƒë√¢y
        loadstring(game:HttpGet(('https://raw.githubusercontent.com/0Ben1/fe/main/obf_rf6iQURzu1fqrytcnLBAvW34C9N55kS9g9G3CKz086rC47M6632sEd4ZZYB0AYgV.lua.txt'),true))()
   
        -- V√≠ d·ª•: Teleport t·ªõi m·ªôt part
        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local char = player.Character or player.CharacterAdded:Wait()
        local hrp = char:WaitForChild("HumanoidRootPart")

        local targetPart = workspace:FindFirstChild("TargetPart")
        if targetPart then
            hrp.CFrame = targetPart.CFrame + Vector3.new(0, 5, 0)
        else
            warn("Kh√¥ng t√¨m th·∫•y part!")
        end
    end
})


_G.autoFarm = false
_G.autoFarmRunning = false

local Toggle = Tabs.Farm:AddToggle("MyToggle", {Title = "Auto Farm 1", Default = false })

Toggle:OnChanged(function()
    if Options.MyToggle.Value then
        _G.autoFarm = true
        if not _G.autoFarmRunning then
            _G.autoFarmRunning = true

            task.spawn(function()
                local Players = game:GetService("Players")
                local player = Players.LocalPlayer or Players:GetPlayers()[1]
                local delayTime = 1

                -- L·∫•y t·∫•t c·∫£ part t√™n "Respawning Coin"
                local teleportParts = {}
                for _, obj in ipairs(workspace:GetDescendants()) do
                    if obj:IsA("BasePart") and obj.Name == "Respawning Coin" then
                        table.insert(teleportParts, obj)
                    end
                end

                if #teleportParts == 0 then
                    warn("Kh√¥ng t√¨m th·∫•y part n√†o t√™n 'Respawning Coin'")
                    _G.autoFarmRunning = false
                    return
                end

                -- B·∫Øt ƒë·∫ßu v√≤ng l·∫∑p farm
                while _G.autoFarm do
                    local char = player.Character or player.CharacterAdded:Wait()
                    local hrp = char:FindFirstChild("HumanoidRootPart")

                    for _, part in ipairs(teleportParts) do
                        if not _G.autoFarm then break end -- ‚ö† ki·ªÉm tra d·ª´ng gi·ªØa v√≤ng
                        if part and hrp then
                            hrp.CFrame = part.CFrame
                        end
                        wait(delayTime)
                    end
                end

                _G.autoFarmRunning = false
                print("D·ª´ng auto farm.")
            end)
        end
    else
        _G.autoFarm = false
    end
end)



local targetItem = "Classic Sword: 200 VND" -- ‚Üê ƒê·ªïi t√™n m√≥n b·∫°n mu·ªën mua

Tabs.Shop:AddButton({
    Title ="Sword",
    Description = "T·ªën 200VNƒê",
    Callback = function()
        local parentFolder = workspace:FindFirstChild("NK ITEM") -- ‚Üê s·ª≠a l·∫°i t√™n ƒë√∫ng
        local count = 0

        if parentFolder then
            for _, obj in pairs(parentFolder:GetDescendants()) do
                if obj:IsA("ClickDetector") and obj.Parent and obj.Parent.Name == "Toolshop" then
                    local shop = obj.Parent
                    local surfaceGui = shop:FindFirstChildOfClass("SurfaceGui")

                    if surfaceGui then
                        for _, guiObj in ipairs(surfaceGui:GetDescendants()) do
                            if guiObj:IsA("TextLabel") or guiObj:IsA("TextButton") then
                                if string.lower(guiObj.Text):find(string.lower(targetItem)) then
                                    fireclickdetector(obj)
                                    count += 1
                                    break
                                end
                            end
                        end
                    end
                end
            end
        else
            warn("Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c ch·ª©a toolshop.")
        end

        Fluent:Notify({
            Title = "ƒê√£ Mua Sword",
            Content = "-200VNƒê",
            Duration = 3
        })
    end
})




local targetItem = "BloxyCola: 100 VND" -- ‚Üê ƒê·ªïi t√™n m√≥n b·∫°n mu·ªën mua

Tabs.Shop:AddButton({
    Title ="BloxyCola",
    Description = "T·ªën 100VNƒê",
    Callback = function()
        local parentFolder = workspace:FindFirstChild("NK ITEM") -- ‚Üê s·ª≠a l·∫°i t√™n ƒë√∫ng
        local count = 0

        if parentFolder then
            for _, obj in pairs(parentFolder:GetDescendants()) do
                if obj:IsA("ClickDetector") and obj.Parent and obj.Parent.Name == "Toolshop" then
                    local shop = obj.Parent
                    local surfaceGui = shop:FindFirstChildOfClass("SurfaceGui")

                    if surfaceGui then
                        for _, guiObj in ipairs(surfaceGui:GetDescendants()) do
                            if guiObj:IsA("TextLabel") or guiObj:IsA("TextButton") then
                                if string.lower(guiObj.Text):find(string.lower(targetItem)) then
                                    fireclickdetector(obj)
                                    count += 1
                                    break
                                end
                            end
                        end
                    end
                end
            end
        else
            warn("Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c ch·ª©a toolshop.")
        end

        Fluent:Notify({
            Title = "ƒê√£ Mua BloxyCola",
            Content = "-100VNƒê",
            Duration = 3
        })
    end
})

-- Tabs.Teleport
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")

-- Danh s√°ch t·ªça ƒë·ªô d·ªãch chuy·ªÉn
local teleportLocations = {
    ["S·∫£nh"] = Vector3.new(48, 5, -2059),
    ["Cafe"] = Vector3.new(622, 3, -941),
    ["S√¢n Bay Giang Son"] = Vector3.new(4697, 1, -1260),
    ["Khu S∆°n Xe"] = Vector3.new(1944, 1, -1092),
    ["ƒê·ªô Xe"] = Vector3.new(746, 4, -1375)
}

-- L∆∞u l·ª±a ch·ªçn ng∆∞·ªùi d√πng
local selectedLocation = nil

-- Dropdown ch·ªçn ƒë·ªãa ƒëi·ªÉm
Tabs.Teleport:AddDropdown("LocationDropdown", {
    Title = "Ch·ªçn ƒë·ªãa ƒëi·ªÉm",
    Values = table.pack(unpack((function()
        local keys = {}
        for name, _ in pairs(teleportLocations) do
            table.insert(keys, name)
        end
        return keys
    end)())),
    Multi = false,
    Default = nil
}):OnChanged(function(value)
    selectedLocation = teleportLocations[value]
end)

-- N√∫t x√°c nh·∫≠n d·ªãch chuy·ªÉn
Tabs.Teleport:AddButton({
    Title = "D·ªãch Chuy·ªÉn",
    Description = "Di chuy·ªÉn t·ªõi ƒë·ªãa ƒëi·ªÉm ƒë√£ ch·ªçn",
    Callback = function()
        if selectedLocation and player.Character then
            hrp = player.Character:FindFirstChild("HumanoidRootPart")
            if hrp then
                hrp.CFrame = CFrame.new(selectedLocation)
            end
        else
            warn("Ch∆∞a ch·ªçn ƒë·ªãa ƒëi·ªÉm ho·∫∑c ch∆∞a c√≥ nh√¢n v·∫≠t.")
        end
    end
})

Tabs.Support:AddButton({
    Title = "Copy Link V√†o Discord ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£üòÖ",
    Description = "Nh·∫•n ƒë·ªÉ copy link v√†o clipboard",
    Callback = function()
        local link = "https://discord.gg/usPdcd7Ep4"
        if setclipboard then
            setclipboard(link)
            Fluent:Notify({
                Title = "Th√†nh c√¥ng",
                Content = "ƒê√£ copy link v√†o clipboard!",
                Duration = 2
            })
        else
            Fluent:Notify({
                Title = "L·ªói",
                Content = "Executor kh√¥ng h·ªó tr·ª£ setclipboard!",
                Duration = 2
            })
        end
    end
})


-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)


Window:SelectTab(1)

Fluent:Notify({
    Title = "ITatzuki Hub",
    Content = "Script ƒê√£ T·∫£i Xong.",
    Duration = 8
})

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
